// ============================================================================
// ポインタについて簡単まとめ
// ============================================================================

#include<iostream>
#include<stdio.h>

int main()
{
    // ========================================================================
    // アドレスの話
    // ========================================================================
    // aのアドレスは & をつけて表す
    // &をアドレス演算子という
    int a = 0;
    std::cout << "a の値: " << a << std::endl;
    std::cout << "a のアドレス: " << &a << std::endl;
    //      a の値: 0
    //      a のアドレス: 0x7ffee651ef38


    // ========================================================================
    // ポインタって何？
    // ========================================================================
    // ポインタは「変数のアドレス」を指す
    // ポインタを宣言 (int* pa)でも良い
    // [int* pa] の方が分かりやすい気がするが，[int *pa]と宣言される方が多い
    int *pa;

    // ポインタを使って a の値を変えてみる
    pa = &a;  // まずポインタに a のアドレスを教えてやる
    *pa = 1;  // ポインタを使って a の値を書き換える (* をポインタ演算子という)
    std::cout << "ポインタで書き換えられた a: " << a << std::endl;
    std::cout << "ポインタを使っても a の値にアクセスできる: " << *pa << std::endl;
    //      ポインタで書き換えられた a: 1
    //      ポインタを使っても a の値にアクセスできる: 1

    // NOTE:
    //  ・ポインタには必ず「アドレスを代入」すること
    //      未定義のポインタはかなり危険
    //      システムを破壊しかねない


    // ========================================================================
    // ポインタのポインタ
    // ========================================================================
    int** ppa;   // ポインタのポインタを宣言
    ppa = &pa;   // ポインタのアドレスをポインタのポインタに教えてやる
    **ppa = 2;   // ポインタのポインタが大元の a の値を書き換える
    std::cout << "ポインタのポインタで書き換えられた a: " << **ppa << std::endl;
    //      ポインタのポインタで書き換えられた a: 2

    return 0;
}